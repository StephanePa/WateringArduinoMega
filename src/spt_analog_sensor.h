///////////////////////////////////////////////////////////////////////////////
// File spt_analog_sensor.h
// Creation date: 2017/09/08
///////////////////////////////////////////////////////////////////////////////

#ifndef SPT_ANALOG_SENSOR_H
#define SPT_ANALOG_SENSOR_H

#include "spt_sensor.h"

///////////////////////////////////////////////////////////////////////////////
// Class CAnalogSensor
///////////////////////////////////////////////////////////////////////////////
class CAnalogSensor : public CSensor
{
  public:
    // Constructor
    CAnalogSensor();
    // class Reset function
    void Reset();
    // initialisation function (set parameters)
    void Init(int sensorid, int analoginputpin/*, PubSubClient *mqttclient = NULL*/);
    // Read the Value at the Arduino analog pin
    float ReadData(bool senddata=false);
    // get data in xml formatted format
    //virtual String GetXMLString();
  protected:
    // Data conversion
    virtual float ConvertData(float data);
    // get data in JSON formatted format
    virtual String _addJSONString(String str);
    // Last measured value
    float Value;
    // Arduino Analog Pin
    int AnalogInputPin;
};
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Class CSoilMoistureSensor
///////////////////////////////////////////////////////////////////////////////
class CSoilMoistureSensor : public CAnalogSensor
{
  public:
    CSoilMoistureSensor();
  protected:
    // Data conversion
    virtual float ConvertData(float data);
};
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Class CLightSensor
///////////////////////////////////////////////////////////////////////////////
class CLightSensor : public CAnalogSensor
{
  public:
    CLightSensor();
  protected:
    // Data conversion
    virtual float ConvertData(float data);
};
///////////////////////////////////////////////////////////////////////////////
#endif // SPT_ANALOG_SENSOR_H

